[tool.poetry]
name = "autoscribe"
version = "0.1.0"
description = "Intelligent changelog automation powered by AI"
authors = ["Petru Arakiss <petruarakiss@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/Arakiss/autoscribe"
repository = "https://github.com/Arakiss/autoscribe"
documentation = "https://github.com/Arakiss/autoscribe#readme"
keywords = [
    "changelog",
    "automation",
    "ai",
    "openai",
    "cli",
    "git-tools",
    "documentation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Documentation",
    "Typing :: Typed"
]
packages = [{ include = "autoscribe" }]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Arakiss/autoscribe/issues"

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.0.0"
rich = "^13.7.0"
requests = "^2.31.0"
openai = "^1.12.0"
pydantic = "^2.6.0"
toml = "^0.10.2"
click = "^8.1.7"
aiohttp = "^3.9.1"
asyncio = "^3.4.3"
pygithub = "^2.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"
ruff = "^0.1.6"
mypy = "^1.7.1"
types-requests = "^2.31.0"
types-toml = "^0.10.8"

[tool.poetry.scripts]
scribe = "autoscribe.cli.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = """
    --cov=autoscribe
    --cov-report=term-missing
    --cov-fail-under=80
    --strict-markers
    --strict-config
"""
asyncio_mode = "strict"

[tool.coverage.run]
source = ["autoscribe"]
omit = [
    "tests/*",
    "**/__init__.py",
    "autoscribe/__main__.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "def __repr__",
    "@abstractmethod",
]
fail_under = 80

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "UP"]
ignore = ["E402"]

[tool.ruff.lint.per-file-ignores]
"autoscribe/cli/main.py" = ["C901"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["autoscribe"]

[tool.autoscribe]
output = "CHANGELOG.md"
version_file = "pyproject.toml"
version_pattern = "version = '{version}'"
categories = [
    "Added",
    "Changed",
    "Deprecated",
    "Removed",
    "Fixed",
    "Security"
]
github_release = true
github_token = "env:GITHUB_TOKEN"
ai_enabled = true
ai_model = "gpt-4o-mini"
openai_api_key = "env:OPENAI_API_KEY"
